{
    "address": "0x5796BA5FEb7483c599163beD4bd88EDf85c22479",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funderAddress",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x73c80949f6f56905b1635b1feddbc94c29d324d7e4661eb74a6793d68840b6bd",
    "receipt": {
        "to": null,
        "from": "0x470FCd052De03b8E20bA3A9fca29284fFb95fcfB",
        "contractAddress": "0x5796BA5FEb7483c599163beD4bd88EDf85c22479",
        "transactionIndex": 17,
        "gasUsed": "921631",
        "logsBloom": "0x
        "blockHash": "0x59dc90bb1e9415a6349e9a2755e9135797ff6455d97b464e2db8c84d98ac29fd",
        "transactionHash": "0x73c80949f6f56905b1635b1feddbc94c29d324d7e4661eb74a6793d68840b6bd",
        "logs": [],
        "blockNumber": 11345658,
        "cumulativeGasUsed": "6625149",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 1,
    "solcInputHash": "45ec8ad53d251c68c53b70f0184b1a17",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jesus Badillo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.0;\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\n/** @title A contract for crowdfunding\\n *  @author Jesus Badillo\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    // Immutable saves gas\\n    address private immutable i_owner;\\n\\n    address[] private s_funders;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not Owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        // Whoever deployed the contract is the owner\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // What happens if someone sends ETH without entering the cost of the contract.\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     *  @notice This function funds this contract\\n     *  @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n\\n        // 1e18 Wei == 1 ETH\\n\\n        // Use library calls for the conversion rate of the ETH to USD\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        // What is reverting?\\n        // Undo any action before, and send remaining gas back\\n\\n        s_funders.push(msg.sender);\\n\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // Reset amount funded by each funder to 0\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // Reset the array\\n        // Create a new address array with 0 objects\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getAddressToAmountFunded(address funderAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funderAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xf841b4f35c18bcda4f8687c55cb749a86d8c78560ac8fc4b0e31ce49837baa67\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n        // Address ETH/USD (Rinkeby): 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        //Get latest data\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        // Return price with correct amount of zeros\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x278ebcfbdb397d1265d44f61a6a73c99df882d55d675d7e28c082b84acd77670\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010c8380380620010c8833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f496200017f6000396000818161040c0152818161059f01526106450152610f496000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108c0565b61031a565b6040516100cc9190610906565b60405180910390f35b3480156100e157600080fd5b506100ea610363565b6040516100f79190610906565b60405180910390f35b34801561010c57600080fd5b5061011561040a565b005b34801561012357600080fd5b5061012c610634565b6040516101399190610906565b60405180910390f35b34801561014e57600080fd5b50610157610641565b6040516101649190610930565b60405180910390f35b34801561017957600080fd5b50610182610669565b60405161018f91906109aa565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906109f1565b610693565b6040516101d69190610930565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106da90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a7b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103119190610aca565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610b35565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561053a5760008082815481106104b4576104b3610b62565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053290610b91565b915050610492565b50600067ffffffffffffffff81111561055657610555610bda565b5b6040519080825280602002602001820160405280156105845781602001602082028036833780820191505090505b506000908051906020019061059a9291906107b6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105e190610c3a565b60006040518083038185875af1925050503d806000811461061e576040519150601f19603f3d011682016040523d82523d6000602084013e610623565b606091505b505090508061063157600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106a8576106a7610b62565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106e683610716565b90506000670de0b6b3a764000085836106ff9190610c4f565b6107099190610cd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561075f57600080fd5b505afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190610d81565b5050509150506402540be400816107ae9190610dfc565b915050919050565b82805482825590600052602060002090810192821561082f579160200282015b8281111561082e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107d6565b5b50905061083c9190610840565b5090565b5b80821115610859576000816000905550600101610841565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088d82610862565b9050919050565b61089d81610882565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d561085d565b5b60006108e4848285016108ab565b91505092915050565b6000819050919050565b610900816108ed565b82525050565b600060208201905061091b60008301846108f7565b92915050565b61092a81610882565b82525050565b60006020820190506109456000830184610921565b92915050565b6000819050919050565b600061097061096b61096684610862565b61094b565b610862565b9050919050565b600061098282610955565b9050919050565b600061099482610977565b9050919050565b6109a481610989565b82525050565b60006020820190506109bf600083018461099b565b92915050565b6109ce816108ed565b81146109d957600080fd5b50565b6000813590506109eb816109c5565b92915050565b600060208284031215610a0757610a0661085d565b5b6000610a15848285016109dc565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b6000610a65601283610a1e565b9150610a7082610a2f565b602082019050919050565b60006020820190508181036000830152610a9481610a58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad5826108ed565b9150610ae0836108ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1557610b14610a9b565b5b828201905092915050565b600081519050610b2f816109c5565b92915050565b600060208284031215610b4b57610b4a61085d565b5b6000610b5984828501610b20565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b9c826108ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bcf57610bce610a9b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c24600083610c09565b9150610c2f82610c14565b600082019050919050565b6000610c4582610c17565b9150819050919050565b6000610c5a826108ed565b9150610c65836108ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c9e57610c9d610a9b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ce3826108ed565b9150610cee836108ed565b925082610cfe57610cfd610ca9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d2881610d09565b8114610d3357600080fd5b50565b600081519050610d4581610d1f565b92915050565b6000819050919050565b610d5e81610d4b565b8114610d6957600080fd5b50565b600081519050610d7b81610d55565b92915050565b600080600080600060a08688031215610d9d57610d9c61085d565b5b6000610dab88828901610d36565b9550506020610dbc88828901610d6c565b9450506040610dcd88828901610b20565b9350506060610dde88828901610b20565b9250506080610def88828901610d36565b9150509295509295909350565b6000610e0782610d4b565b9150610e1283610d4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5157610e50610a9b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8e57610e8d610a9b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ecb57610eca610a9b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0857610f07610a9b565b5b82820290509291505056fea26469706673582212200a53a0ad604b3e02027ff862e7c04cf8527ccfa544b4b0facd02dd432c53f9ac64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba91906108c0565b61031a565b6040516100cc9190610906565b60405180910390f35b3480156100e157600080fd5b506100ea610363565b6040516100f79190610906565b60405180910390f35b34801561010c57600080fd5b5061011561040a565b005b34801561012357600080fd5b5061012c610634565b6040516101399190610906565b60405180910390f35b34801561014e57600080fd5b50610157610641565b6040516101649190610930565b60405180910390f35b34801561017957600080fd5b50610182610669565b60405161018f91906109aa565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906109f1565b610693565b6040516101d69190610930565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106da90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a7b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103119190610aca565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610b35565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561053a5760008082815481106104b4576104b3610b62565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053290610b91565b915050610492565b50600067ffffffffffffffff81111561055657610555610bda565b5b6040519080825280602002602001820160405280156105845781602001602082028036833780820191505090505b506000908051906020019061059a9291906107b6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105e190610c3a565b60006040518083038185875af1925050503d806000811461061e576040519150601f19603f3d011682016040523d82523d6000602084013e610623565b606091505b505090508061063157600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106106a8576106a7610b62565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106e683610716565b90506000670de0b6b3a764000085836106ff9190610c4f565b6107099190610cd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561075f57600080fd5b505afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190610d81565b5050509150506402540be400816107ae9190610dfc565b915050919050565b82805482825590600052602060002090810192821561082f579160200282015b8281111561082e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107d6565b5b50905061083c9190610840565b5090565b5b80821115610859576000816000905550600101610841565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088d82610862565b9050919050565b61089d81610882565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d561085d565b5b60006108e4848285016108ab565b91505092915050565b6000819050919050565b610900816108ed565b82525050565b600060208201905061091b60008301846108f7565b92915050565b61092a81610882565b82525050565b60006020820190506109456000830184610921565b92915050565b6000819050919050565b600061097061096b61096684610862565b61094b565b610862565b9050919050565b600061098282610955565b9050919050565b600061099482610977565b9050919050565b6109a481610989565b82525050565b60006020820190506109bf600083018461099b565b92915050565b6109ce816108ed565b81146109d957600080fd5b50565b6000813590506109eb816109c5565b92915050565b600060208284031215610a0757610a0661085d565b5b6000610a15848285016109dc565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b6000610a65601283610a1e565b9150610a7082610a2f565b602082019050919050565b60006020820190508181036000830152610a9481610a58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad5826108ed565b9150610ae0836108ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1557610b14610a9b565b5b828201905092915050565b600081519050610b2f816109c5565b92915050565b600060208284031215610b4b57610b4a61085d565b5b6000610b5984828501610b20565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b9c826108ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bcf57610bce610a9b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c24600083610c09565b9150610c2f82610c14565b600082019050919050565b6000610c4582610c17565b9150819050919050565b6000610c5a826108ed565b9150610c65836108ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c9e57610c9d610a9b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ce3826108ed565b9150610cee836108ed565b925082610cfe57610cfd610ca9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d2881610d09565b8114610d3357600080fd5b50565b600081519050610d4581610d1f565b92915050565b6000819050919050565b610d5e81610d4b565b8114610d6957600080fd5b50565b600081519050610d7b81610d55565b92915050565b600080600080600060a08688031215610d9d57610d9c61085d565b5b6000610dab88828901610d36565b9550506020610dbc88828901610d6c565b9450506040610dcd88828901610b20565b9350506060610dde88828901610b20565b9250506080610def88828901610d36565b9150509295509295909350565b6000610e0782610d4b565b9150610e1283610d4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5157610e50610a9b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8e57610e8d610a9b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ecb57610eca610a9b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0857610f07610a9b565b5b82820290509291505056fea26469706673582212200a53a0ad604b3e02027ff862e7c04cf8527ccfa544b4b0facd02dd432c53f9ac64736f6c63430008080033",
    "devdoc": {
        "author": "Jesus Badillo",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowdfunding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
