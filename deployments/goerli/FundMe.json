{
    "address": "0x57D6525497F80e3c4CBACa502298245ee513EEf4",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheapWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funderAddress",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0xfa9cc2ac5812b9f8e8f6b3b89e30e8ad98d903f07702013678a5be6a42464906",
    "receipt": {
        "to": null,
        "from": "0x470FCd052De03b8E20bA3A9fca29284fFb95fcfB",
        "contractAddress": "0x57D6525497F80e3c4CBACa502298245ee513EEf4",
        "transactionIndex": 108,
        "gasUsed": "1063735",
        "logsBloom": "0x
        "blockHash": "0xe0114aa7c2105dc204f778ca672cdf2b1f2ed41b1eb1a6336177762a5425fe28",
        "transactionHash": "0xfa9cc2ac5812b9f8e8f6b3b89e30e8ad98d903f07702013678a5be6a42464906",
        "logs": [],
        "blockNumber": 7554693,
        "cumulativeGasUsed": "19636752",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 2,
    "solcInputHash": "578b24e7895d2ee0d6a98c6ecdb48bd2",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Jesus Badillo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.0;\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\n/** @title A contract for crowdfunding\\n *  @author Jesus Badillo\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    // Immutable saves gas\\n    address private immutable i_owner;\\n\\n    address[] private s_funders;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not Owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        // Whoever deployed the contract is the owner\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // What happens if someone sends ETH without entering the cost of the contract.\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     *  @notice This function funds this contract\\n     *  @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n\\n        // 1e18 Wei == 1 ETH\\n\\n        // Use library calls for the conversion rate of the ETH to USD\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        // What is reverting?\\n        // Undo any action before, and send remaining gas back\\n\\n        s_funders.push(msg.sender);\\n\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        // Reset amount funded by each funder to 0\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // Reset the array\\n        // Create a new address array with 0 objects\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheapWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // Mappings cannot be in memory\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getAddressToAmountFunded(address funderAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funderAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa31e5997b9733e90cc18e88732c93b0179527ea9e4b1a4a60ea6da4f1c8b4a38\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n        // Address ETH/USD (Rinkeby): 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        //Get latest data\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        // Return price with correct amount of zeros\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x278ebcfbdb397d1265d44f61a6a73c99df882d55d675d7e28c082b84acd77670\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a5921461011f578063893d20e81461014a5780639e87a5cd14610175578063b60d4288146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e0578063206ddccd1461010b5780633ccfd60b1461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b56565b610322565b6040516100d79190610b9c565b60405180910390f35b3480156100ec57600080fd5b506100f561036b565b6040516101029190610b9c565b60405180910390f35b610113610412565b005b61011d6106a0565b005b34801561012b57600080fd5b506101346108ca565b6040516101419190610b9c565b60405180910390f35b34801561015657600080fd5b5061015f6108d7565b60405161016c9190610bc6565b60405180910390f35b34801561018157600080fd5b5061018a6108ff565b6040516101979190610c40565b60405180910390f35b6101a86101e7565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c87565b610929565b6040516101de9190610bc6565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097090919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d11565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103199190610d60565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d557600080fd5b505afa1580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610dcb565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610497576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561051a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104d0575b5050505050905060005b81518110156105a557600082828151811061054257610541610df8565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059d90610e27565b915050610524565b50600067ffffffffffffffff8111156105c1576105c0610e70565b5b6040519080825280602002602001820160405280156105ef5781602001602082028036833780820191505090505b5060009080519060200190610605929190610a4c565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161064c90610ed0565b60006040518083038185875af1925050503d8060008114610689576040519150601f19603f3d011682016040523d82523d6000602084013e61068e565b606091505b505090508061069c57600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610725576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156107d057600080828154811061074a57610749610df8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c890610e27565b915050610728565b50600067ffffffffffffffff8111156107ec576107eb610e70565b5b60405190808252806020026020018201604052801561081a5781602001602082028036833780820191505090505b5060009080519060200190610830929190610a4c565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161087790610ed0565b60006040518083038185875af1925050503d80600081146108b4576040519150601f19603f3d011682016040523d82523d6000602084013e6108b9565b606091505b50509050806108c757600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061093e5761093d610df8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061097c836109ac565b90506000670de0b6b3a764000085836109959190610ee5565b61099f9190610f6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611017565b5050509150506402540be40081610a449190611092565b915050919050565b828054828255906000526020600020908101928215610ac5579160200282015b82811115610ac45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6c565b5b509050610ad29190610ad6565b5090565b5b80821115610aef576000816000905550600101610ad7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2382610af8565b9050919050565b610b3381610b18565b8114610b3e57600080fd5b50565b600081359050610b5081610b2a565b92915050565b600060208284031215610b6c57610b6b610af3565b5b6000610b7a84828501610b41565b91505092915050565b6000819050919050565b610b9681610b83565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b610bc081610b18565b82525050565b6000602082019050610bdb6000830184610bb7565b92915050565b6000819050919050565b6000610c06610c01610bfc84610af8565b610be1565b610af8565b9050919050565b6000610c1882610beb565b9050919050565b6000610c2a82610c0d565b9050919050565b610c3a81610c1f565b82525050565b6000602082019050610c556000830184610c31565b92915050565b610c6481610b83565b8114610c6f57600080fd5b50565b600081359050610c8181610c5b565b92915050565b600060208284031215610c9d57610c9c610af3565b5b6000610cab84828501610c72565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b6000610cfb601283610cb4565b9150610d0682610cc5565b602082019050919050565b60006020820190508181036000830152610d2a81610cee565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6b82610b83565b9150610d7683610b83565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dab57610daa610d31565b5b828201905092915050565b600081519050610dc581610c5b565b92915050565b600060208284031215610de157610de0610af3565b5b6000610def84828501610db6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e3282610b83565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e6557610e64610d31565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eba600083610e9f565b9150610ec582610eaa565b600082019050919050565b6000610edb82610ead565b9150819050919050565b6000610ef082610b83565b9150610efb83610b83565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3457610f33610d31565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7982610b83565b9150610f8483610b83565b925082610f9457610f93610f3f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbe81610f9f565b8114610fc957600080fd5b50565b600081519050610fdb81610fb5565b92915050565b6000819050919050565b610ff481610fe1565b8114610fff57600080fd5b50565b60008151905061101181610feb565b92915050565b600080600080600060a0868803121561103357611032610af3565b5b600061104188828901610fcc565b955050602061105288828901611002565b945050604061106388828901610db6565b935050606061107488828901610db6565b925050608061108588828901610fcc565b9150509295509295909350565b600061109d82610fe1565b91506110a883610fe1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110e7576110e6610d31565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112457611123610d31565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116157611160610d31565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561119e5761119d610d31565b5b82820290509291505056fea2646970667358221220f061b7b9d4b796a513e06e502b2eb9e155188679bb38900e7a34545a94a4d68264736f6c63430008080033",
    "devdoc": {
        "author": "Jesus Badillo",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowdfunding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 67,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
